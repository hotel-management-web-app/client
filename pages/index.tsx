import React, { useState, Fragment } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import HeroBg from '../public/hero-bg.png';
import { Listbox, Transition } from '@headlessui/react';
import { HiSelector } from '@react-icons/all-files/hi/HiSelector';
import {
  DateRangePicker,
  FocusedInputShape,
} from 'react-dates';
import 'react-dates/initialize';
import 'react-dates/lib/css/_datepicker.css';

const numberOfAdults = [
  { id: 1, number: 1 },
  { id: 2, number: 2 },
  { id: 3, number: 3 },
  { id: 4, number: 4 },
  { id: 5, number: 5 },
  { id: 6, number: 6 },
  { id: 7, number: 7 },
  { id: 8, number: 8 },
  { id: 9, number: 9 },
];

const numberOfChildren = [
  { id: 1, number: 0 },
  { id: 2, number: 1 },
  { id: 3, number: 2 },
  { id: 4, number: 3 },
  { id: 5, number: 4 },
  { id: 6, number: 5 },
  { id: 7, number: 6 },
  { id: 8, number: 7 },
  { id: 9, number: 8 },
  { id: 10, number: 9 },
];

const rooms = [
  {
    id: '1',
    name: 'Ordinary Room',
    imgUrl: '/../public/home-room-1.png',
    href: '#',
  },
  {
    id: '2',
    name: 'Deluxe Room',
    imgUrl: '/../public/home-room-2.png',
    href: '#',
  },
  {
    id: '3',
    name: 'Outside Room',
    imgUrl: '/../public/home-room-3.png',
    href: '#',
  },
];

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(' ');
}

const Home: NextPage = () => {
  const [adultsNumber, setAdultsNumber] = useState(numberOfAdults[0]);
  const [childrenNumber, setChildrenNumber] = useState(numberOfChildren[0]);
  const [startDate, setStartDate] = useState<moment.Moment | null>(null);
  const [endDate, setEndDate] = useState<moment.Moment | null>(null);
  const [focusedInput, setFocusedInput] = useState<FocusedInputShape | null>(
    null
  );

  return (
    <div>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section id="hero" className="relative">
        <Image src={HeroBg} alt="hero background" layout="responsive" />
        <h1 className="absolute text-center top-1/3 left-1/2 transform -translate-x-1/2 text-white font-medium text-3xl w-full md:text-6xl md:leading-[80px]">
          Welcome to our Hotel
          <br />
          Please have a happy stay!
        </h1>
      </section>
      <div className="bg-dark-gray -mt-2 py-16 px-8">
        <form
          action="#"
          className="flex justify-center 2xl:justify-between flex-wrap items-end gap-8 max-w-container mx-auto text-white text-xl"
        >
          <div>
            <Listbox value={adultsNumber} onChange={setAdultsNumber}>
              {({ open }) => (
                <>
                  <Listbox.Label>Adults</Listbox.Label>
                  <div className="mt-1 relative">
                    <Listbox.Button className="block border border-black text-black py-2 mt-4 w-64 bg-white">
                      <span className="flex items-center">
                        <span className="mx-auto block truncate">
                          {adultsNumber.number}
                        </span>
                      </span>
                      <span className="ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                        <HiSelector className="text-xl text-gray-600" />
                      </span>
                    </Listbox.Button>
                    <Transition
                      show={open}
                      as={Fragment}
                      leave="transition ease-in duration-100"
                      leaveFrom="opacity-100"
                      leaveTo="opacity-0"
                    >
                      <Listbox.Options className="absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm">
                        {numberOfAdults.map(number => (
                          <Listbox.Option
                            key={number.id}
                            className={({ active }) =>
                              classNames(
                                active
                                  ? 'text-white bg-gray-500'
                                  : 'text-gray-900',
                                'cursor-default select-none relative py-2 pl-3 pr-9 text-center'
                              )
                            }
                            value={number}
                          >
                            {({ selected }) => (
                              <>
                                <div className="flex items-center">
                                  <span
                                    className={classNames(
                                      selected
                                        ? 'font-semibold'
                                        : 'font-normal',
                                      'mx-auto block truncate text-lg'
                                    )}
                                  >
                                    {number.number}
                                  </span>
                                </div>
                              </>
                            )}
                          </Listbox.Option>
                        ))}
                      </Listbox.Options>
                    </Transition>
                  </div>
                </>
              )}
            </Listbox>
          </div>
          <div>
            <Listbox value={childrenNumber} onChange={setChildrenNumber}>
              {({ open }) => (
                <>
                  <Listbox.Label>Children</Listbox.Label>
                  <div className="mt-1 relative">
                    <Listbox.Button className="block border border-black text-black py-2 mt-4 w-64 bg-white">
                      <span className="flex items-center">
                        <span className="mx-auto block truncate">
                          {childrenNumber.number}
                        </span>
                      </span>
                      <span className="ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                        <HiSelector className="text-xl text-gray-600" />
                      </span>
                    </Listbox.Button>
                    <Transition
                      show={open}
                      as={Fragment}
                      leave="transition ease-in duration-100"
                      leaveFrom="opacity-100"
                      leaveTo="opacity-0"
                    >
                      <Listbox.Options className="absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm">
                        {numberOfChildren.map(number => (
                          <Listbox.Option
                            key={number.id}
                            className={({ active }) =>
                              classNames(
                                active
                                  ? 'text-white bg-gray-500'
                                  : 'text-gray-900',
                                'cursor-default select-none relative py-2 pl-3 pr-9 text-center'
                              )
                            }
                            value={number}
                          >
                            {({ selected }) => (
                              <>
                                <div className="flex items-center">
                                  <span
                                    className={classNames(
                                      selected
                                        ? 'font-semibold'
                                        : 'font-normal',
                                      'mx-auto block truncate text-lg'
                                    )}
                                  >
                                    {number.number}
                                  </span>
                                </div>
                              </>
                            )}
                          </Listbox.Option>
                        ))}
                      </Listbox.Options>
                    </Transition>
                  </div>
                </>
              )}
            </Listbox>
          </div>
          <div className="relative mt-10">
            <label className="absolute -top-[44px]">Check-in</label>
            <label className="absolute -top-[44px] left-40">Check-out</label>
            <DateRangePicker
              startDate={startDate}
              startDateId="your_unique_start_date_id" 
              endDate={endDate}
              endDateId="your_unique_end_date_id"
              onDatesChange={({ startDate, endDate }) => {
                setStartDate(startDate);
                setEndDate(endDate);
              }}
              focusedInput={focusedInput}
              onFocusChange={focusedInput => setFocusedInput(focusedInput)}
              displayFormat="DD/MM/YYYY"
              enableOutsideDays={false}
            />
          </div>
          <button className="bg-yellow-500 h-[46px] px-5">
            Check availibitlity
          </button>
        </form>
      </div>
      <div className="container max-w-container mx-auto px-8 2xl:px-0">
        <section id="rooms" className="text-center">
          <h2 className="text-[2.5rem] font-light mt-20">See Our Rooms</h2>
          <div className="flex justify-around gap-y-10 2xl:justify-between flex-wrap mt-20 mb-16">
            {rooms.map(room => (
              <a key={room.id} href={room.href} className="relative">
                <Image
                  src={room.imgUrl}
                  alt={room.name}
                  width="355"
                  height="473"
                />
                <p className="absolute text-white w-full text-3xl top-48 left-1/2 transform -translate-x-1/2">
                  {room.name}
                </p>
              </a>
            ))}
          </div>
          <a href="#" className="underline text-3xl font-light">
            See all roms
          </a>
        </section>
      </div>
      <section
        id="newsletter"
        className="text-center bg-dark-gray text-white mt-40 pt-12 pb-20 px-8 2xl:px-0"
      >
        <h2 className="text-4xl font-medium">Stay up to date</h2>
        <h3 className="text-3xl mt-8">Subscribe to our newsletter</h3>
        <form
          action="#"
          className="flex justify-around gap-y-10 gap-x-8 2xl:justify-between flex-wrap max-w-container mx-auto mt-24 text-black"
        >
          <input placeholder="Name" className="w-96 h-16 pl-5" />
          <input placeholder="Email Address" className="w-96 h-16 pl-5" />
          <button className="w-96 h-16 bg-yellow-500 font-medium text-lg text-white">
            Subscribe
          </button>
        </form>
      </section>
    </div>
  );
};

export default Home;
